import * as fs from 'fs';
import { extractVariables } from './parser';
import { getComponentVariablesOutput, getPaletteVariablesOutput, getGlobalVariablesOutput } from './output';

const globalThemeVariables = extractVariables('./src/v2/styles/_global-theme-variables.scss');
const globalLayoutVariables = extractVariables('./src/v2/styles/_global-layout-variables.scss');
const componentVariables = extractVariables('./src/v2/**/*-@(theme|layout).scss', globalThemeVariables);
const paletteVariables = extractVariables('./src/v2/styles/_palette-variables.scss');

const globalThemeVariablesOutput = getGlobalVariablesOutput(globalThemeVariables, 'theme');
const globalLayoutVariablesOutput = getGlobalVariablesOutput(globalLayoutVariables, 'layout');
const componentVariablesOutput = getComponentVariablesOutput(componentVariables);
const paletteVariablesOutput = getPaletteVariablesOutput(paletteVariables);

const updateAutogeneratedSlot = (
  templateFilePath: string,
  slotId: string,
  contentToInject: string,
  targetFilePath: string,
) => {
  const template = fs.readFileSync(templateFilePath, 'utf8');
  const targetContent = template.replaceAll(slotId, contentToInject);
  fs.writeFileSync(targetFilePath, targetContent, 'utf8');
};

updateAutogeneratedSlot(
  `./doc-templates/palette-variables.template.mdx`,
  `[//]: # '#SLOT-autogenerated-palette-variables'`,
  paletteVariablesOutput,
  `./docs/theming/palette-variables.mdx`,
);

updateAutogeneratedSlot(
  `./doc-templates/global-variables.template.mdx`,
  `[//]: # '#SLOT-autogenerated-theme-variables'`,
  globalThemeVariablesOutput,
  `./docs/theming/global-variables.mdx`,
);

updateAutogeneratedSlot(
  `./docs/theming/global-variables.mdx`,
  `[//]: # '#SLOT-autogenerated-layout-variables'`,
  globalLayoutVariablesOutput,
  `./docs/theming/global-variables.mdx`,
);


updateAutogeneratedSlot(
  `./doc-templates/component-variables.template.mdx`,
  `[//]: # '#SLOT-autogenerated-component-variables'`,
  componentVariablesOutput,
  `./docs/theming/component-variables.mdx`,
);
